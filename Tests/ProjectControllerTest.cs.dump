using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;
using Moq;
using Xunit;
using MyProject.Controllers; 
using MyProject.Models;

public class ProjectControllerTest
{
    private readonly Mock<ILogger<ProjectsController>> _mockLogger;
    private readonly ProjectsController _projectController;

    public ProjectControllerTest()
    {
        _mockLogger = new Mock<ILogger<ProjectsController>>();
        _projectController = new ProjectsController(_mockLogger.Object);
    }

    [Fact]
    public async Task GetProjectById_ReturnsProject()
    {
        // Arrange
        var projectId = Guid.NewGuid();
        var expectedProject = new Project { Id = projectId, Name = "Test Project" };

        // Act
        var result = await _projectController.GetProjectById(projectId);

        // Assert
        var okResult = Assert.IsType<OkObjectResult>(result);
        var project = Assert.IsType<Project>(okResult.Value);
        Assert.Equal(expectedProject.Id, project.Id);
        Assert.Equal(expectedProject.Name, project.Name);
    }
}